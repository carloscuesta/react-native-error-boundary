// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ErrorBoundary when there are no errors should render the children 1`] = `
<Text>
  Hey!
</Text>
`;

exports[`ErrorBoundary when there is an error when FallbackComponent is defined as a prop should catch the error and render the props.FallbackComponent 1`] = `
<Text>
  Error!
</Text>
`;

exports[`ErrorBoundary when there is an error when FallbackComponent is not defined as a prop should catch the error and render the default FallbackComponent 1`] = `
<RCTSafeAreaView
  style={
    {
      "backgroundColor": "#fafafa",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      {
        "marginHorizontal": 16,
      }
    }
  >
    <Text
      style={
        {
          "color": "#000",
          "fontSize": 48,
          "fontWeight": "300",
          "paddingBottom": 16,
        }
      }
    >
      Oops!
    </Text>
    <Text
      style={
        {
          "color": "#000",
          "fontSize": 32,
          "fontWeight": "800",
        }
      }
    >
      There's an error
    </Text>
    <Text
      style={
        {
          "paddingVertical": 16,
        }
      }
    >
      Error: Objects are not valid as a React child (found: [object Error]). If you meant to render a collection of children, use an array instead.
    </Text>
    <View
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "backgroundColor": "#2196f3",
          "borderRadius": 50,
          "opacity": 1,
          "padding": 16,
        }
      }
    >
      <Text
        style={
          {
            "color": "#fff",
            "fontWeight": "600",
            "textAlign": "center",
          }
        }
      >
        Try again
      </Text>
    </View>
  </View>
</RCTSafeAreaView>
`;
